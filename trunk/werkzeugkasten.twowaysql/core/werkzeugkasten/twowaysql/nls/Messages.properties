##
# Generic messages.
##
LIFECYCLE_INITIALIZE=initialize

##
# Parser error messages.
##
LABEL_TWOWAYSQL=TwoWaySql
LABEL_BLOCKCOMMENT=BlockComment('/* some of comment */')
REQUIRED_BLOCKCOMMENT=Some of Strings
LABEL_LINECOMMENT=LineComment('-- some of comment \\n')
REQUIRED_LINECOMMENT=Some of Strings
LABEL_BEGINCOMMENT=BeginComment('/*BEGIN*/')
VIABLE_BEGINCOMMENT='/*' or '--' or '#'
REQUIRED_BEGINCOMMENT=Some of Strings or Comments without EndComment('/*END*/')
LABEL_IFCOMMENT=IfComment('/*IF some of expression*/')
REQUIRED_IFCOMMENT=Some of Strings or Comments
LABEL_ELSEIFNODE=In the ElseIfComment('/*ELSEIF some of expression*/')
REQUIRED_ELSEIFNODE=Some of Strings or Comments without EndComment('/*END*/')
LABEL_ELSEIFBLOCKCOMMENT=ElseIfComment('/*ELSEIF some of expression*/')
LABEL_ELSEIFLINECOMMENT=ElseIfComment('--ELSEIF some of expression\\n')
LABEL_ELSENODE=In the ElseComment('/*ELSE*/') 
REQUIRED_ELSENODE=Some of Strings or Comments without EndComment('/*END*/')
LABEL_ELSECOMMENT=ElseComment('/*ELSE*/')
VIABLE_ELSECOMMENT='/*' or '--' or '#'
LABEL_ENDCOMMENT=EndComment('/*END*/')
VIABLE_ENDCOMMENT='/*' or '--' or '#'
NO_VIABLE_ALT=%s must start by %s but %s is detected
MISMATCHED_TOKEN=%s is expecting '%s' but %s is detected
LABEL_TXT=Part of Text
REQUIRED_TXT=Some of Strings
EARLY_EXIT=%s requires %s but %s is detected
LABEL_EXPRESSION=Part of Expression
REQUIRED_EXPRESSION=Some of Expression
LABEL_BINDCOMMENT=BindComment('/*? some of expression*/')
LABEL_INBIND='IN Condition' BindComment('IN/*? some of expression*/(aaa,bbb)')
LABEL_INBINDSKIPPED='IN Condition' expression list
REQUIRED_INBINDSKIPPED=Some of Strings without ',' and '(' and ')'
UNWANTED_TOKEN=%s is expecting '%s' but %s is detected
LABEL_BINDINGNAME=BinderName(optional)
LABEL_IDENT=Some of Strings without any symbols
UNEXPECTED_TOKEN_TYPE=UNKNOWN TOKEN TYPE [%s]
MISMATCHEDSET=%s requires %s but %s is detected

##
# Dao messages
##
PARSE_TWOWAYSQL=parse twowaysql
VISIT_TWOWAYSQL_TREE=visit twowaysql tree
SET_DEPENDENCY={} is set to {}
LOAD_RESOURCE=load Query from classloader context:[{}]
EXPRESSION_RESULT=expression {} returns {}
NULL_OR_EMPTY=null or empty
SKIPPED_TEXT=skipped {}
BINDERFACTORY_FAILED=BinderFactory failed. name:[{}] expression:[{}] value:[{}]
MISSING_BINDERFACTORY=Missing BinderFactory. name:[{}] expression:[{}] value:[{}]
BIND=Binder:{} index:{}
BINDERPRODUCER_REGISTER_TYPE=registerByType class:{}
BINDERPRODUCER_REGISTER_NAME=registerByName name:{}
BINDERPRODUCER_FIND_TYPE=findByType class:{}
BINDERPRODUCER_FIND_NAME=findByName name:{}


JDBC_CONNECTION_GET=get connection
JDBC_CONNECTION_HANDLE=handle connection
JDBC_CONNECTION_CLOSE=close connection
JDBC_STATEMENT_PREPARE=prepare statement
JDBC_STATEMENT_HANDLE=handle statement
JDBC_STATEMENT_CLOSE=close statement
JDBC_RESULTSET_EXECUTE=execute query
JDBC_RESULTSET_HANDLE=handle resultSet
JDBC_RESULTSET_CLOSE=close resultSet