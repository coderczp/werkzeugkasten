Get Libraries from maven2 remote/local repositories.

java -jar mvnhack-0.0.3.jar [groupId] [artifactId] [version] flat=[on/off] dest=[path]

- groupId
  if groupId and artifactId has same id, you skip this.
- artifactId
- version
- flat 
  default is on.
  if you want to get own your local repository only. switch to off.
- dest
  set destination directry.
  default is execution directory.

exmaples ...
java -jar mvnhack.jar commons-httpclient commons-httpclient 2.0.2
 you get commons-httpclient-2.0.2.jar and commons-logging-1.0.3.jar into execution directory.


java -jar mvnhack-0.0.3.jar [yml]

- yml
  get libraries based on yaml.
  skip this and current dir contains dependencies.yml then use that file.

example of dependencies.yml
    flatten : true
    destination : ./lib
    proxy : http://proxy.example.com:8080
    http.nonProxyHosts : localhost

    repositories :
      - http://repository.codehaus.org/
      - https://repository.jboss.org/nexus/content/repositories/releases/

    dependencies :
      - org.yaml snakeyaml 1.8

this case, codehaus and jboss repositories are append to reference repositories. 
snakeyaml1.8 is defined by space separated value.
if groupId and artifactId has same id, you skip groupId.

see more information 
  http://code.google.com/p/werkzeugkasten/wiki/mvnhack
